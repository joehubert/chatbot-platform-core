# =======================================================
# Chatbot Platform Core - Environment Variables Template
# =======================================================
# Copy this file to .env and fill in the necessary values.
# Usage: cp .env.example .env
# =======================================================

# =======================================================
# DOCKER COMPOSE CONFIGURATION
# =======================================================

# --- Project Configuration ---
COMPOSE_PROJECT_NAME=chatbot-platform
BUILD_TARGET=development
DEBUG=True

# --- Service Ports ---
# --- Service Ports ---
API_EXTERNAL_PORT=3000
API_INTERNAL_PORT=8000
CHROMA_EXTERNAL_PORT=8001
CHROMA_INTERNAL_PORT=8000
POSTGRES_EXTERNAL_PORT=5432
REDIS_EXTERNAL_PORT=6379

# --- Service Versions ---
POSTGRES_VERSION=15
REDIS_VERSION=7
CHROMA_VERSION=latest

# =======================================================
# DATABASE CONFIGURATION
# =======================================================

# --- PostgreSQL ---
POSTGRES_DB=chatbot_platform
POSTGRES_USER=chatbot_user
POSTGRES_PASSWORD=chatbot_password
DATABASE_POOL_SIZE=20
DATABASE_ECHO=false

# --- Redis ---
REDIS_DB=0

# =======================================================
# CHATBOT-API SERVICE ENVIRONMENT VARIABLES
# =======================================================
# These variables are loaded directly into the chatbot-api container via env_file

# --- Application Configuration ---
NODE_ENV=development
LOG_LEVEL=INFO
SHOW_DETAILED_ERRORS=true

# --- API Configuration ---
API_V1_STR=/api/v1
PROJECT_NAME="Turnkey AI Chatbot"
VERSION=1.0.0
DESCRIPTION="Enterprise chatbot platform for SMEs"

# --- Security ---
SECRET_KEY=your-super-secret-key-for-jwt-change-in-production
ACCESS_TOKEN_EXPIRE_MINUTES=30

# --- CORS Configuration ---
BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://localhost:8080", "http://localhost:3001"]

# --- File Upload ---
MAX_FILE_SIZE_MB=50
ALLOWED_FILE_TYPES=["pdf","txt","docx","md"]

# --- Chroma Configuration ---
CHROMA_SSL=false
CHROMA_TELEMETRY=false

# =======================================================
# API KEYS & CREDENTIALS (REQUIRED)
# =======================================================

# --- LLM Providers (Choose at least one) ---
DEFAULT_MODEL_PROVIDER=openai
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=PLACEHOLDER

# Get from: https://console.anthropic.com/
ANTHROPIC_API_KEY=PLACEHOLDER

# Get from: https://huggingface.co/settings/tokens
HUGGINGFACE_API_KEY=PLACEHOLDER


# --- Azure OpenAI (If using Azure instead of OpenAI) ---
AZURE_OPENAI_ENDPOINT=https://your-resource.openai.azure.com/
AZURE_OPENAI_API_KEY=your-azure-openai-key

# --- Communication Services (Optional) ---
# Twilio for SMS notifications
# Get from: https://console.twilio.com/
TWILIO_ACCOUNT_SID=ACxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_FROM_NUMBER=+1234567890

# SendGrid for Email notifications
# Get from: https://app.sendgrid.com/settings/api_keys
SENDGRID_API_KEY=SG.your-sendgrid-api-key
SENDGRID_FROM_EMAIL=noreply@yourdomain.com

# SMTP (Alternative to SendGrid for Email)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your-email@gmail.com
SMTP_PASSWORD=your-app-password

# =======================================================
# VECTOR DATABASE CONFIGURATION
# =======================================================

# --- Pluggable Vector Database Selection ---
# Choose one: pinecone, chroma, weaviate, pgvector
# 'chroma' is the default for local development with Docker Compose
VECTOR_DB_TYPE=chroma

# --- Pinecone Configuration (if VECTOR_DB_TYPE=pinecone) ---
# Get from: https://app.pinecone.io/
PINECONE_API_KEY=your-pinecone-api-key
PINECONE_ENVIRONMENT=your-pinecone-environment
PINECONE_INDEX_NAME=chatbot-knowledge-base

# --- Weaviate Configuration (if VECTOR_DB_TYPE=weaviate) ---
# WEAVIATE_URL=http://weaviate:8080
# WEAVIATE_API_KEY=your-weaviate-api-key

# =======================================================
# RATE LIMITING & PERFORMANCE
# =======================================================

# --- Rate Limiting ---
RATE_LIMIT_PER_USER_PER_MINUTE=60
RATE_LIMIT_GLOBAL_PER_MINUTE=1000

# --- Cache Configuration ---
CACHE_SIMILARITY_THRESHOLD=0.85
CACHE_TTL_HOURS=24

# =======================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# =======================================================

# --- Development Settings ---
# Uncomment and modify for development environment
# LOG_LEVEL=DEBUG
# DATABASE_ECHO=true
# SHOW_DETAILED_ERRORS=true

# --- Production Settings ---
# Uncomment and modify for production environment
# NODE_ENV=production
# LOG_LEVEL=WARNING
# SHOW_DETAILED_ERRORS=false
# DATABASE_ECHO=false
# SECRET_KEY=generate-a-secure-random-secret-key-for-production

# =======================================================
# SUPPLEMENTAL ENVIRONMENT VARIABLES
# =======================================================
# These variables were referenced in the Settings class but missing from the base template

# =======================================================
# CORE APPLICATION CONFIGURATION
# =======================================================

# Application environment (development, staging, production, test)
ENVIRONMENT=development

# Server host binding (0.0.0.0 for Docker, localhost for local dev)
HOST=0.0.0.0

# Number of worker processes (adjust based on CPU cores)
WORKERS=1

# =======================================================
# DATABASE CONFIGURATION (ADVANCED)
# =======================================================

# Database connection pool advanced settings
# Note: DATABASE_POOL_SIZE and DATABASE_ECHO are already defined in the main .env file
DATABASE_MAX_OVERFLOW=30
DATABASE_POOL_TIMEOUT=30
DATABASE_POOL_RECYCLE=3600

# =======================================================
# REDIS CONFIGURATION (ADVANCED)
# =======================================================

# Redis authentication (leave empty if no auth required)
# Note: REDIS_DB is already defined in the main .env file
REDIS_PASSWORD=

# Redis connection pool settings
REDIS_POOL_SIZE=20
REDIS_SOCKET_TIMEOUT=5
REDIS_SOCKET_CONNECT_TIMEOUT=5

# =======================================================
# LLM PROVIDER CONFIGURATION
# =======================================================

# Note: DEFAULT_MODEL_PROVIDER is already defined in the main .env file

# =======================================================
# VECTOR DATABASE CONFIGURATION (CRITICAL)
# =======================================================

# Vector database credentials and connection
# Note: VECTOR_DB_TYPE, PINECONE_API_KEY, PINECONE_ENVIRONMENT, and PINECONE_INDEX_NAME 
# are already defined in the main .env file
VECTOR_DB_API_KEY=your-vector-db-api-key-here
VECTOR_DB_HOST=localhost
VECTOR_DB_PORT=8000
VECTOR_DB_INDEX_NAME=chatbot-knowledge-base

# Vector embedding configuration
EMBEDDING_DIMENSION=1536
VECTOR_SIMILARITY_METRIC=cosine

# =======================================================
# MODEL CONFIGURATION
# =======================================================

# Model selection for different tasks
RELEVANCE_MODEL=gpt-3.5-turbo
SIMPLE_QUERY_MODEL=gpt-3.5-turbo
COMPLEX_QUERY_MODEL=gpt-4
CLARIFICATION_MODEL=gpt-3.5-turbo
EMBEDDING_MODEL=text-embedding-ada-002

# Complex model configuration (JSON format for multiple models)
MODEL_CONFIGS={}

# =======================================================
# MODEL ROUTING CONFIGURATION
# =======================================================

# Query complexity thresholds (0.0 to 1.0)
COMPLEXITY_THRESHOLD_SIMPLE=0.3
COMPLEXITY_THRESHOLD_COMPLEX=0.7
RELEVANCE_CONFIDENCE_THRESHOLD=0.6
MAX_CLARIFICATION_ATTEMPTS=3

# =======================================================
# RATE LIMITING CONFIGURATION (ADVANCED)
# =======================================================

# Note: RATE_LIMIT_PER_USER_PER_MINUTE and RATE_LIMIT_GLOBAL_PER_MINUTE 
# are already defined in the main .env file

# Burst capacity settings (allow short-term spikes)
RATE_LIMIT_USER_BURST_CAPACITY=10
RATE_LIMIT_GLOBAL_BURST_CAPACITY=50

# IP-based rate limiting
RATE_LIMIT_PER_IP_PER_MINUTE=120
RATE_LIMIT_IP_BURST_CAPACITY=20

# Session-based rate limiting
RATE_LIMIT_PER_SESSION_PER_MINUTE=30
RATE_LIMIT_SESSION_BURST_CAPACITY=5

# =======================================================
# CACHE CONFIGURATION (ADVANCED)
# =======================================================

# Note: CACHE_SIMILARITY_THRESHOLD and CACHE_TTL_HOURS are already defined in the main .env file

# Maximum number of cached entries
CACHE_MAX_ENTRIES=10000

# =======================================================
# AUTHENTICATION & SECURITY
# =======================================================

# Note: SECRET_KEY and ACCESS_TOKEN_EXPIRE_MINUTES are already defined in the main .env file

# Session and token timeouts (in minutes/days)
AUTH_SESSION_TIMEOUT_MINUTES=30
OTP_EXPIRY_MINUTES=5
REFRESH_TOKEN_EXPIRE_DAYS=7

# Security settings
BCRYPT_ROUNDS=12
CSRF_SECRET_KEY=your-csrf-secret-key-change-in-production

# =======================================================
# COMMUNICATION SERVICES
# =======================================================

# Service provider selection
SMS_PROVIDER=twilio
EMAIL_PROVIDER=sendgrid

# SMTP TLS configuration
SMTP_USE_TLS=true

# =======================================================
# FILE PROCESSING CONFIGURATION
# =======================================================

# Note: MAX_FILE_SIZE_MB and ALLOWED_FILE_TYPES are already defined in the main .env file

# Upload and processing settings
UPLOAD_DIR=uploads
CHUNK_SIZE=1000
CHUNK_OVERLAP=200
MAX_CHUNKS_PER_DOCUMENT=1000

# =======================================================
# ERROR HANDLING CONFIGURATION
# =======================================================

# Fallback error message for users
FALLBACK_ERROR_MESSAGE=I cannot process your request. Please contact support at support@example.com

# Retry configuration
MAX_RETRY_ATTEMPTS=3
RETRY_DELAY_SECONDS=1.0

# =======================================================
# LOGGING CONFIGURATION
# =======================================================

# Note: LOG_LEVEL is already defined in the main .env file

# Log format and file settings
LOG_FORMAT=json
LOG_FILE=
LOG_MAX_SIZE_MB=100
LOG_BACKUP_COUNT=5

# =======================================================
# MONITORING CONFIGURATION
# =======================================================

# Metrics and health check settings
ENABLE_METRICS=true
METRICS_PORT=9090
HEALTH_CHECK_TIMEOUT=30

# =======================================================
# MCP SERVER CONFIGURATION
# =======================================================

# MCP (Model Context Protocol) server settings
MCP_REQUEST_TIMEOUT=30
MCP_MAX_RETRIES=3
MCP_RETRY_DELAY=1.0
MCP_HEALTH_CHECK_INTERVAL=60
MCP_CONFIG_FILE=

# =======================================================
# DEVELOPMENT OVERRIDES
# =======================================================
# Uncomment these for development environment
# Note: LOG_LEVEL, DATABASE_ECHO, and SHOW_DETAILED_ERRORS are already defined in the main .env file

# Enable debug logging
# LOG_LEVEL=DEBUG
# DATABASE_ECHO=true

# =======================================================
# PRODUCTION OVERRIDES
# =======================================================
# Uncomment and modify these for production environment
# Note: SHOW_DETAILED_ERRORS is already defined in the main .env file

# ENVIRONMENT=production
# LOG_LEVEL=WARNING
# SHOW_DETAILED_ERRORS=false
# WORKERS=4
# BCRYPT_ROUNDS=14
# AUTH_SESSION_TIMEOUT_MINUTES=15
# ENABLE_METRICS=true

# =======================================================
# SECURITY NOTES
# =======================================================
# 
# 1. Change all default secret keys before production deployment
# 2. Use strong, unique passwords for database and Redis
# 3. Configure proper CORS origins for your domain
# 4. Set appropriate rate limits based on your expected traffic
# 5. Enable TLS/SSL for all external communications
# 6. Regularly rotate API keys and secrets
# 7. Monitor logs for security events
# 8. Use environment-specific configurations
#
# =======================================================